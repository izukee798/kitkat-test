local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Izukee Test Script",
   LoadingTitle = "Testing",
   LoadingSubtitle = "Izukee",
   Theme = "Default",
   ToggleUIKeybind = "K",
   ConfigurationSaving = {
      Enabled = true,
      FileName = "Test Hub"
   },
   KeySystem = false
})

local Tab = Window:CreateTab("Main", 4483362458)

-- 🔁 Player Setup
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local humanoid = Character:FindFirstChildOfClass("Humanoid")

Player.CharacterAdded:Connect(function(char)
   Character = char
   humanoid = char:WaitForChild("Humanoid")
end)

-- 🚀 Fixed Fly Toggle
local flying = false
local flySpeed = 50
local bodyGyro, bodyVel, flyConn

local function getHRP()
   local char = Player.Character or Player.CharacterAdded:Wait()
   return char:WaitForChild("HumanoidRootPart")
end

local function startFly()
   local hrp = getHRP()

   bodyGyro = Instance.new("BodyGyro")
   bodyGyro.P = 9e4
   bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
   bodyGyro.CFrame = hrp.CFrame
   bodyGyro.Parent = hrp

   bodyVel = Instance.new("BodyVelocity")
   bodyVel.Velocity = Vector3.zero
   bodyVel.MaxForce = Vector3.new(9e9, 9e9, 9e9)
   bodyVel.Parent = hrp

   flyConn = RunService.RenderStepped:Connect(function()
      local cam = workspace.CurrentCamera
      local dir = Player.Character and Player.Character:FindFirstChildOfClass("Humanoid") and Player.Character:FindFirstChildOfClass("Humanoid").MoveDirection or Vector3.zero

      if UIS.TouchEnabled then
         -- no vertical movement for now on mobile
      else
         if UIS:IsKeyDown(Enum.KeyCode.Space) then
            dir += Vector3.new(0,1,0)
         end
         if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
            dir -= Vector3.new(0,1,0)
         end
      end

      bodyGyro.CFrame = cam.CFrame
      bodyVel.Velocity = dir.Magnitude > 0 and dir.Unit * flySpeed or Vector3.zero
   end)
end

local function stopFly()
   if flyConn then
      flyConn:Disconnect()
      flyConn = nil
   end
   if bodyGyro then
      bodyGyro:Destroy()
      bodyGyro = nil
   end
   if bodyVel then
      bodyVel:Destroy()
      bodyVel = nil
   end
end


-- stopFly and the toggle remain unchanged

-- 🚶 WalkSpeed Slider
local defaultSpeed = 16

local Player = game.Players.LocalPlayer
local humanoid = nil
local defaultSpeed = 16

local function onCharacterAdded(char)
   humanoid = char:WaitForChild("Humanoid")
   humanoid.WalkSpeed = defaultSpeed
end

Player.CharacterAdded:Connect(onCharacterAdded)

if Player.Character then
   onCharacterAdded(Player.Character)
end

local Slider = Tab:CreateSlider({
   Name = "Walkspeed 1",
   Range = {0, 200},
   Increment = 5,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   
        if humanoid then
             humanoid.WalkSpeed = Value
        end
     end
})

-- 🚫 Noclip Toggle
local noclip = false
local noclipConn = nil

local function startNoclip()
   noclipConn = game:GetService("RunService").Stepped:Connect(function()
      local char = Player.Character
      if char then
         for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
               part.CanCollide = false
            end
         end
      end
   end)
end

local function stopNoclip()
   if noclipConn then
      noclipConn:Disconnect()
      noclipConn = nil
   end

   local char = Player.Character
   if char then
      for _, part in pairs(char:GetDescendants()) do
         if part:IsA("BasePart") then
            part.CanCollide = true
         end
      end
   end
end

Tab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Flag = "NoclipToggle",
   Callback = function(state)
      noclip = state
      if noclip then
         startNoclip()
      else
         stopNoclip()
      end
   end,
})


